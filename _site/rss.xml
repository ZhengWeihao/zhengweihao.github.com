<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>place_your_blog_title_here</title>
    <link>place_your_blog_url_here</link>
    <atom:link href="place_your_blog_url_here/rss.xml" rel="self" type="application/rss+xml" />
    <description>place_your_blog_description_here</description>
    <language>place_your_blog_language_here</language>
    <pubDate>Fri, 16 Jan 2015 00:51:42 +0800</pubDate>
    <lastBuildDate>Fri, 16 Jan 2015 00:51:42 +0800</lastBuildDate>

    
    <item>
      <title>年会摇奖小工具</title>
      <link>place_your_blog_url_here/other/2015/01/16/random-nums-tool.html</link>
      <pubDate>16 Jan 2015</pubDate>
      <author>place_your_name_here</author>
      <guid>place_your_blog_url_here/other/2015/01/16/random-nums-tool</guid>
      <description>&lt;h2 id=&quot;section&quot;&gt;年会摇奖小工具&lt;/h2&gt;
&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;临近年关，想必大家都会期待这一年的公司年会，又会有一些什么样的精彩活动。而就在昨天，以前的人事同事要求我帮写个年会摇奖小工具，以供年会抽奖使用。我简单分析了下思路，觉得还挺有意思的，于是就用JQuery+HTML写了个小网页。实现并不复杂，当然也可能不够好，大神们轻喷。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;需求背景：&lt;/p&gt;

    &lt;p&gt;　　首先由工作人员为员工们发配个人编号（连续数字），然后在工具中设置抽奖数字区间（即个人编号的范围），之后点击“摇奖”按钮进行摇号，点击“停止”按钮后，确认一个区间内数字，即为中奖号，而该号对应编号的同事即为中奖人了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;实现思路：&lt;/p&gt;

    &lt;p&gt;　　首先定义两个数组：一为&lt;code&gt;号码数组&lt;/code&gt;，将摇号的所有数字打乱次序后，放入其中；另外一个则是&lt;code&gt;中奖数组&lt;/code&gt;，将中奖号码从号码数组中删去，存入到中奖数组中。&lt;/p&gt;

    &lt;p&gt;　　定义好数组变量后，还需要一个&lt;code&gt;旗帜变量&lt;/code&gt;，作为摇奖进行中与停止的标志。编写一个主函数，定时地进行执行，根据旗帜变量进行相应的操作：在摇奖过程中时，将号码数组的所有数字依依快速地显示到显示框中；在停止后，选定当时显示的数字作为中奖数字，并停止定时执行。实现如下:	　　&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  //主函数
  var range = [];//号码数组
  var prize = [];//中奖数组
  var inGame = false;//旗帜变量
  var exe_i = 0;//当前执行到的下标
  function main() {
      if(inGame) {//继续执行
          //操作数组下标
          exe_i++;
          if(exe_i &amp;gt;= range.length) exe_i = 0;

          //显示数组内容
          $stage.html(range[exe_i]);

          //数组长度不够时自动结束
          if(range.length &amp;lt;= 1) inGame = false;
      } else {//结束游戏
          var cur = range[exe_i];//当前号码

          //更新数组数据
          prize.push(cur);
          range.splice(exe_i, 1);

          //显示结果
          console.log(&#39;下标:&#39; + exe_i + &#39;;数字:&#39; + cur);
          alert(&#39;摇中号码：&#39; + cur);
          msg();

          //停止定时任务
          window.clearInterval(mainInterval);
      }
  }
&lt;/code&gt;&lt;/pre&gt;

    &lt;p&gt;　　有了主函数，工具已经完成了一大半，现在还需要一个触发的函数作为开始与停止操作的执行者。点击“开始”按钮时修改状态位为开始状态并开始定时执行主函数，而点击“停止”按钮时修改旗帜变量状态位为停止状态，主函数会根据状态为进入到停止操作。实现如下：&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  //触发函数
  var mainInterval;//定时执行任务标识，通过它可以取消定时执行
  function play() {
      if(inGame) {//执行时触发 -&amp;gt; 停止
          inGame = false;
      } else {//非执行状态触发 -&amp;gt; 开始
          //检查执行环境
          if(range.length &amp;lt;= 0) {
              alert(&#39;没号了，加几个进来呗&#39;);
              return;
          }
			
          //开始执行
          inGame = true;
          mainInterval = self.setInterval(&#39;main()&#39;, 50);
      }
  }
&lt;/code&gt;&lt;/pre&gt;

    &lt;p&gt;　　至此核心部分已经基本完成，当然还缺少一些细节的控制，比如：需要提供输入框进行交互；需要根据输入区间产生乱序的号码数组等，这里就不再赘述了，当然，最后还需要对界面美化一下~
  　　&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;结果展示：&lt;/p&gt;

    &lt;p&gt;　　这里再提供一下最终完成的作品（背景图是人事MM找来的，原来丑得惨不忍睹。。。），&lt;a href=&quot;/example/random-nums/index.html&quot;&gt;点我查看&lt;/a&gt;，详细代码就请点&lt;code&gt;审查元素&lt;/code&gt;咯 ^_^&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>第一篇文章</title>
      <link>place_your_blog_url_here/2015/01/13/HelloWorld.html</link>
      <pubDate>13 Jan 2015</pubDate>
      <author>place_your_name_here</author>
      <guid>place_your_blog_url_here/2015/01/13/HelloWorld</guid>
      <description>&lt;h2 id=&quot;hello-world&quot;&gt;Hello World&lt;/h2&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;一直想在Github上搭建个个人博客，来做一些学习及生活方面的笔记，今天终于是实现了。建立博客的原因，一方面是供自己回忆与归纳整理，另一方面也作为与朋友们分享的一些内容，希望能够共同学习，共同进步。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;技术实现主要是通过Ruby的Jekyll框架（搭配3-Jekyll皮肤），在本地写好MarkDown笔记后编译同步到Github空间来发布&lt;code&gt;（想学来找我啊）&lt;/code&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;内容不出意外将以Java知识为主，也会记录一些自己对编程的思考与学习笔记，当然也会有一些好用工具的分享，以及部分生活娱乐方面的分享，希望内容将能日渐充实起来，也希望能够分享出一些精彩的内容。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    
  </channel>
</rss>