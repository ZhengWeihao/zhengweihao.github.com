---
layout:     post
title:      "设计模式01——面向对象编程(OOP)"
subtitle:   ""
date:       2018-02-22 20:11:27
author:     "ZhengWeihao"
header-img: "imgs/post-bg-default.jpg"
tags:
    - Java
    - DesignPattern
---

面向对象编程(OOP)
---



　　在Java软件开发过程中，存在着许许多多需要我们去解决的问题，其中不可绕过的有这么几个问题：

* 软件复杂庞大
* 软件维护困难
* 软件需求不断发生变更



　　而为了更好地解决以上几个问题，在我们的开发过程中总是提倡采用**面向对象程序设计**理念，以要求我们编写具有良好可读性、可维护性和可扩展性的代码。面向对象程序设计要求代码应具有**高内聚低耦合**的特点。同时，主要通过以下几种方式来实现面向对象编程：

* 抽象：

  提取我们对一类事物所关注的特性或行为，形成一种抽象模型，即：类，特性称之为属性，行为称之为方法。每个类下的具体实例可以赋予具体的属性，称之为：对象。

* 封装：

  赋予属性与方法以访问权限，只对外暴露必要的属性与方法，以保证独立性、隔离性，达到高内聚的特点。类封装的实现依赖于修饰符(public、private、protected等)。

* 继承：

  当一个类集成了另一个类，继承类为子类，被继承类为父类，子类将拥有父类的所有非私有属性与方法，以达到复用的效果。

* 多态：

  



参考资料：

* [面向对象编程思想（OOP）](https://www.cnblogs.com/xiaosongluffy/p/5072501.html)